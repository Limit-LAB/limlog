use crate::formats::log::{Log, LogFileHeader};

const LOG1: [u8; 34] = [
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ts
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // id
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // key length
    0x01, // key
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // value length
    0x0A, // value
];
const LOG2: [u8; 34] = [
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ts
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // id
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // key length
    0x02, // key
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // value length
    0x0B, // value
];
const LOG3: [u8; 34] = [
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ts
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // id
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // key length
    0x03, // key
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // value length
    0x0C, // value
];

const LOG_HEADER: [u8; 24] = [
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // magic
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // attributes
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // entry_count
          // logs
];

#[test]
fn test_log_format() {
    let l1 = Log::try_from(&LOG1[..]).unwrap();
    let l2 = Log::try_from(&LOG2[..]).unwrap();
    let l3 = Log::try_from(&LOG3[..]).unwrap();
    let lh = LogFileHeader::try_from(&LOG_HEADER[..]).unwrap();

    assert_eq!(
        Log {
            ts: 1,
            id: 1,
            key: vec![1],
            value: vec![10]
        },
        l1
    );
    assert_eq!(
        Log {
            ts: 2,
            id: 2,
            key: vec![2],
            value: vec![11]
        },
        l2
    );
    assert_eq!(
        Log {
            ts: 3,
            id: 3,
            key: vec![3],
            value: vec![12]
        },
        l3
    );

    assert_eq!(
        LogFileHeader {
            magic_number: 18446744073709551615,
            attributes: 0,
            entry_count: 3
        },
        lh
    );
}
